package nl.jgermeraad;

import java.util.concurrent.Semaphore;

public class Bridge {
	public static final Semaphore available = new Semaphore(1);
	private static Farmer southBound, northBound;
	
	public static void main(String[] args) {
		southBound = new Farmer();
		northBound = new Farmer();
	}
	
	private class Farmer implements Runnable {
		private int sleepTime = 1000;
		
		public void run() {
			if(available.tryAcquire()) {
				try {
					Thread.sleep(sleepTime);
					available.release();
				} catch (Exception e) {
					System.err.println(e);
				}
			}
		}
	}
}
