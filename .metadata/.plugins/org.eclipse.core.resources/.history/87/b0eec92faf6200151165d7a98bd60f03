package nl.jgermeraad;


public class BridgeSimulation {
	private Bridge bridge;
	
	public BridgeSimulation() {
		bridge = new Bridge();
	}
	
	private class Farmer implements Runnable {
		private String name;
		
		public Farmer(String name) {
			this.name = name;
		}
		
		@Override
		public void run() {
			try {
				while(!bridge.acquire())
					wait();
				System.out.println(name + " is crossing the bridge.");
				Thread.sleep(sleepTime);
				bridge.release();
				notify();
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
	}
	
	private static class Bridge {
		private boolean free = true;
		
		public synchronized boolean acquire() {
			if(!free)
				return false;
			free = false;
			return true;
		}
		
		public synchronized void release() {
			free = true;
		}
	}
}
